<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue.js - Font Awesome字体图标的使用详解（vue-fontawesome库）</title>
      <link href="/2023/03/20/article/"/>
      <url>/2023/03/20/article/</url>
      
        <content type="html"><![CDATA[<h2 id="Vue-js-Font-Awesome字体图标的使用详解（vue-fontawesome库）"><a href="#Vue-js-Font-Awesome字体图标的使用详解（vue-fontawesome库）" class="headerlink" title="Vue.js - Font Awesome字体图标的使用详解（vue-fontawesome库）"></a>Vue.js - Font Awesome字体图标的使用详解（vue-fontawesome库）</h2><p>Font Awesome 是一个十分优秀的第三方图标库，我之前也写过文章介绍如何在 html 页面中使用它（点击查看）。本文接着介绍，如何在 Vue 项目中使用 Font Awesome。</p><h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><h2 id="1-安装基础依赖"><a href="#1-安装基础依赖" class="headerlink" title="1. 安装基础依赖"></a>1. 安装基础依赖</h2><p>进入 Vue 项目文件夹，执行如下命令安装基础依赖库。</p><pre><code>npm i --save @fortawesome&#x2F;fontawesome-svg-corenpm i --save @fortawesome&#x2F;vue-fontawesome</code></pre><h2 id="2-安装样式依赖"><a href="#2-安装样式依赖" class="headerlink" title="2. 安装样式依赖"></a>2. 安装样式依赖</h2><p>Font Awosome 为我们提供了 Solid、Regular、Brands 这三种免费样式（日常使用完全足够），执行如下命令安装。</p><pre><code>npm i --save @fortawesome&#x2F;free-solid-svg-iconsnpm i --save @fortawesome&#x2F;free-regular-svg-iconsnpm i --save @fortawesome&#x2F;free-brands-svg-icons</code></pre><h2 id="3-修改-src-x2F-main-js"><a href="#3-修改-src-x2F-main-js" class="headerlink" title="3. 修改 src&#x2F;main.js"></a>3. 修改 src&#x2F;main.js</h2><p>添加如下代码引入并配置 Font Awesome，之后我们就可以使用它了。</p><pre><code>import { library } from &#39;@fortawesome&#x2F;fontawesome-svg-core&#39;import { fas } from &#39;@fortawesome&#x2F;free-solid-svg-icons&#39;import { far } from &#39;@fortawesome&#x2F;free-regular-svg-icons&#39;import { fab } from &#39;@fortawesome&#x2F;free-brands-svg-icons&#39;import { FontAwesomeIcon, FontAwesomeLayers, FontAwesomeLayersText }from &#39;@fortawesome&#x2F;vue-fontawesome&#39;library.add(fas, far, fab)Vue.component(&#39;font-awesome-icon&#39;, FontAwesomeIcon)Vue.component(&#39;font-awesome-layers&#39;, FontAwesomeLayers)Vue.component(&#39;font-awesome-layers-text&#39;, FontAwesomeLayersText)</code></pre><h2 id="二、样式介绍"><a href="#二、样式介绍" class="headerlink" title="二、样式介绍"></a>二、样式介绍</h2><p>（1）上面提到 Font Awosome 为我们提供了三种免费的样式，使用时分别对应不同的前缀。</p><p>solid 样式，前缀为：fas</p><img src="/img/m1.png" style="margin-left:0;border:1px solid #09c;"><p>regular 样式，前缀为：far</p><img src="/img/m2.png" style="margin-left:0;border:1px solid #09c;"><p>brands 样式，前缀为：fab</p><img src="/img/m3.png" style="margin-left:0;border:1px solid #09c;"><p>（2）它们提供的所有图标可以进入官方的图标搜索页进行查看：<br><a href="https://fontawesome.com/icons?d=gallery&m=free">https://fontawesome.com/icons?d=gallery&amp;m=free</a></p><h2 id="三、基本用法"><a href="#三、基本用法" class="headerlink" title="三、基本用法"></a>三、基本用法</h2><h2 id="1-显示图标"><a href="#1-显示图标" class="headerlink" title="1. 显示图标"></a>1. 显示图标</h2><p>（1）我们使用 font-awesome-icon 标签来显示图标，icon 属性中可以设置样式前缀、以及图标名字。</p><img src="/img/m4.png" style="margin-left:0;border:1px solid #09c;"><pre><code>&lt;font-awesome-icon :icon&#x3D;&quot;[&#39;fas&#39;, &#39;square&#39;]&quot; &#x2F;&gt;&lt;font-awesome-icon :icon&#x3D;&quot;[&#39;far&#39;, &#39;square&#39;]&quot; &#x2F;&gt;&lt;font-awesome-icon :icon&#x3D;&quot;[&#39;fab&#39;, &#39;accessible-icon&#39;]&quot; &#x2F;&gt;</code></pre><p>（2）如果是 solid 样式（前缀为：fas），则前缀可以省略。比如上面第一个图标等效下面写法：</p><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;square&quot; &#x2F;&gt;</code></pre><h2 id="2-设置图标大小"><a href="#2-设置图标大小" class="headerlink" title="2. 设置图标大小"></a>2. 设置图标大小</h2><p>默认情况下图标和当前文字的大小是一样的。我们可以通过 size 属性在此基础上作调整，该属性支持多种类型的设置方式。</p><img src="/img/m5.png" style="margin-left:0; border:1px solid #09c;"><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot;  &#x2F;&gt;&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot; size&#x3D;&quot;xs&quot; &#x2F;&gt;&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot; size&#x3D;&quot;lg&quot;  &#x2F;&gt;&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot; size&#x3D;&quot;2x&quot; &#x2F;&gt;</code></pre><h2 id="3-固定宽度图标"><a href="#3-固定宽度图标" class="headerlink" title="3. 固定宽度图标"></a>3. 固定宽度图标</h2><p>使用 fixed-width 可以固定图标宽度。<br><img src="/img/m6.png" style="margin-left:0; border:1px solid #09c;"></p><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;home&quot; fixed-width &#x2F;&gt; home &lt;br&gt;&lt;font-awesome-icon icon&#x3D;&quot;child&quot; fixed-width &#x2F;&gt; help &lt;br&gt;&lt;font-awesome-icon icon&#x3D;&quot;cog&quot; fixed-width &#x2F;&gt; settings &lt;br&gt;</code></pre><h2 id="4-旋转图标"><a href="#4-旋转图标" class="headerlink" title="4. 旋转图标"></a>4. 旋转图标</h2><img src="/img/m7.png" style="margin-left:0; border:1px solid #09c;"><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot; rotation&#x3D;&quot;0&quot; &#x2F;&gt;&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot; rotation&#x3D;&quot;90&quot; &#x2F;&gt;&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot; rotation&#x3D;&quot;180&quot; &#x2F;&gt;&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot; rotation&#x3D;&quot;270&quot; &#x2F;&gt;</code></pre><h2 id="5-翻转图标"><a href="#5-翻转图标" class="headerlink" title="5. 翻转图标"></a>5. 翻转图标</h2><img src="/img/m8.png" style="margin-left:0; border:1px solid #09c;"><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot;  &#x2F;&gt;&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot; flip&#x3D;&quot;horizontal&quot; &#x2F;&gt;&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot; flip&#x3D;&quot;vertical&quot; &#x2F;&gt;&lt;font-awesome-icon icon&#x3D;&quot;chess-knight&quot; flip&#x3D;&quot;both&quot; &#x2F;&gt;</code></pre><h2 id="6-旋转动画效果"><a href="#6-旋转动画效果" class="headerlink" title="6. 旋转动画效果"></a>6. 旋转动画效果</h2><p>（1）添加 spin 属性可以让图标不停地顺时针旋转。<br><img src="/img/m9.png" style="margin-left:0; border:1px solid #09c;"></p><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;arrow-circle-down&quot; spin &#x2F;&gt;</code></pre><p>（2）添加 pulse 属性同样可以让图标旋转，但它不像 spin 那样是均匀地变化角度，而是 0 度、45 度、90 度…这样跳跃地变化。</p><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;arrow-circle-down&quot; pulse &#x2F;&gt;</code></pre><h2 id="7-图标居左、居右"><a href="#7-图标居左、居右" class="headerlink" title="7. 图标居左、居右"></a>7. 图标居左、居右</h2><p>有时我们需要让图标一直在最左侧或最右侧（在做文字围绕图标效果时会用到）。默认情况下，当图标文字共存时的显示效果如下：<br><img src="/img/m10.png" style="margin-left:0; border:1px solid #09c;"></p><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;clipboard-list&quot; size&#x3D;&quot;2x&quot;&#x2F;&gt;welcome to hangge.com welcome to hangge.com</code></pre><p>（1）加上 pull&#x3D;”left” 后的效果：<br><img src="/img/m11.png" style="margin-left:0; border:1px solid #09c;"></p><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;clipboard-list&quot; size&#x3D;&quot;2x&quot; pull&#x3D;&quot;left&quot;&#x2F;&gt;welcome to hangge.com welcome to hangge.com</code></pre><p>（2）加上 pull&#x3D;”right” 后的效果：<br><img src="/img/m12.png" style="margin-left:0; border:1px solid #09c;"></p><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;clipboard-list&quot; size&#x3D;&quot;2x&quot; pull&#x3D;&quot;right&quot;&#x2F;&gt;welcome to hangge.com welcome to hangge.com</code></pre><h2 id="8-给图标加上边框（border）"><a href="#8-给图标加上边框（border）" class="headerlink" title="8. 给图标加上边框（border）"></a>8. 给图标加上边框（border）</h2><img src="/img/m13.png" style="margin-left:0; border:1px solid #09c;"><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;clipboard-list&quot; size&#x3D;&quot;2x&quot; pull&#x3D;&quot;right&quot; border &#x2F;&gt;welcome to hangge.com welcome to hangge.com</code></pre><h2 id="四、进阶用法"><a href="#四、进阶用法" class="headerlink" title="四、进阶用法"></a>四、进阶用法</h2><h2 id="1-变形、自由变换（Transforms）"><a href="#1-变形、自由变换（Transforms）" class="headerlink" title="1. 变形、自由变换（Transforms）"></a>1. 变形、自由变换（Transforms）</h2><p>（1）比如下面样例将第二个图标缩小 6，并向左移动 4：<br><img src="/img/m14.png" style="margin-left:0; border:1px solid #09c;"></p><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;clipboard-list&quot; &#x2F;&gt;&lt;br&gt;&lt;font-awesome-icon icon&#x3D;&quot;clipboard-list&quot; transform&#x3D;&quot;shrink-6 left-4&quot; &#x2F;&gt;</code></pre><p>（2）下面样例将第二个图标顺时针旋转 42 度：<br><img src="/img/m15.png" style="margin-left:0; border:1px solid #09c;"></p><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;clipboard-list&quot; &#x2F;&gt;&lt;br&gt;&lt;font-awesome-icon icon&#x3D;&quot;clipboard-list&quot; :transform&#x3D;&quot;{ rotate: 42 }&quot; &#x2F;&gt;</code></pre><h2 id="2-遮罩"><a href="#2-遮罩" class="headerlink" title="2. 遮罩"></a>2. 遮罩</h2><img src="/img/m16.png" style="margin-left:0; border:1px solid #09c;"><pre><code>&lt;font-awesome-icon icon&#x3D;&quot;star&quot; &#x2F;&gt;&lt;font-awesome-icon  icon&#x3D;&quot;star&quot; mask&#x3D;&quot;circle&quot;  &#x2F;&gt;&lt;font-awesome-icon  icon&#x3D;&quot;star&quot; mask&#x3D;&quot;square&quot;  &#x2F;&gt;</code></pre><h2 id="3-多个图标的组合使用"><a href="#3-多个图标的组合使用" class="headerlink" title="3. 多个图标的组合使用"></a>3. 多个图标的组合使用</h2><img src="/img/m17.png" style="margin-left:0; border:1px solid #09c;"><pre><code>&lt;font-awesome-layers class&#x3D;&quot;fa-lg&quot;&gt;  &lt;font-awesome-icon icon&#x3D;&quot;circle&quot; style&#x3D;&quot;color: green;&quot;&#x2F;&gt;  &lt;font-awesome-icon icon&#x3D;&quot;check&quot; transform&#x3D;&quot;shrink-6&quot; style&#x3D;&quot;color: white;&quot; &#x2F;&gt;&lt;&#x2F;font-awesome-layers&gt;</code></pre><h2 id="4-图标与文字的组合使用"><a href="#4-图标与文字的组合使用" class="headerlink" title="4. 图标与文字的组合使用"></a>4. 图标与文字的组合使用</h2><img src="/img/m18.png" style="margin-left:0; border:1px solid #09c;"><pre><code>&lt;font-awesome-layers full-width class&#x3D;&quot;fa-4x&quot;&gt;  &lt;font-awesome-icon icon&#x3D;&quot;star&quot;&#x2F;&gt;  &lt;font-awesome-layers-text transform&#x3D;&quot;down-1 right-1 shrink-14&quot; value&#x3D;&quot;hangge&quot; style&#x3D;&quot;color:white&quot; &#x2F;&gt;&lt;&#x2F;font-awesome-layers&gt;</code></pre><h2 id="5-动态改变图标（图标的绑定）"><a href="#5-动态改变图标（图标的绑定）" class="headerlink" title="5. 动态改变图标（图标的绑定）"></a>5. 动态改变图标（图标的绑定）</h2><pre><code>&lt;template&gt;  &lt;font-awesome-icon :icon&#x3D;&quot;icon&quot; &#x2F;&gt;&lt;&#x2F;template&gt;&lt;script&gt;export default {  computed: {    icon() {      return [&#39;fas&#39;, &#39;coffee&#39;]    }  }}&lt;&#x2F;script&gt;</code></pre><p>tags: [html, css, js]</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>移动端ui框架汇总</title>
      <link href="/2023/03/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/03/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="1-vonic"><a href="#1-vonic" class="headerlink" title="1. vonic"></a>1. vonic</h2><p>vonic 一个基于 vue.js 和 ionic 样式的 UI 框架，用于快速构建移动端单页应用，很简约。<br>中文文档 | github地址 | 在线预览</p><hr><h2 id="2-vux"><a href="#2-vux" class="headerlink" title="2. vux"></a>2. vux</h2><p>vux 基于WeUI和Vue(2.x)开发的移动端UI组件库。基于webpack+vue-loader+vux可以快速开发移动端页面，配合vux-loader方便你在WeUI的基础上定制需要的样式。小编在开发微信公众号的时候使用过，欢迎来评论区吐槽。<br>中文文档 | github地址 | 在线预览</p><hr><h2 id="3-Mint-UI"><a href="#3-Mint-UI" class="headerlink" title="3. Mint UI"></a>3. Mint UI</h2><p>Mint UI 由饿了么前端团队推出的 Mint UI 是一个基于 Vue.js 的移动端组件库。<br>中文文档 | github地址 | 在线预览</p><hr><h2 id="4-Muse-UI"><a href="#4-Muse-UI" class="headerlink" title="4. Muse-UI"></a>4. Muse-UI</h2><p>基于 Vue 2.0 和 Material Design 的 UI 组件库<br>中文文档 | github地址</p><hr><h2 id="5-Vant"><a href="#5-Vant" class="headerlink" title="5. Vant"></a>5. Vant</h2><p>是有赞前端团队基于有赞统一的规范实现的 Vue 组件库，提供了一整套 UI 基础组件和业务组件，这是我目前用过最好用的框架。<br>中文文档 | github地址 | 在线预览</p><hr><h2 id="6-Cube-UI"><a href="#6-Cube-UI" class="headerlink" title="6. Cube-UI"></a>6. Cube-UI</h2><p>滴滴 WebApp 团队 实现的 基于 Vue.js 实现的精致移动端组件库<br>中文文档 | github地址 | 在线预览</p><hr><h2 id="7-vue-ydui"><a href="#7-vue-ydui" class="headerlink" title="7. vue-ydui"></a>7. vue-ydui</h2><p>Vue-ydui 是 YDUI Touch 的一个Vue2.x实现版本，专为移动端打造，在追求完美视觉体验的同时也保证了其性能高效。目前由个人维护。<br>中文文档 | github地址 | 在线预览</p><hr><h2 id="www-baidu-com"><a href="#www-baidu-com" class="headerlink" title="www.baidu.com"></a><a href="http://www.baidu.com/">www.baidu.com</a></h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/20/hello-world/"/>
      <url>/2023/03/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
